---
- name: Get secret from HashiCorp Vault and connect to Proxmox
  hosts: localhost     
  tasks:
    - name: Read secret from Vault
      community.hashi_vault.vault_read:
        url: "{{ vault_url }}"  # URL Vault-сервера
        token: "{{ lookup('env', 'VAULT_TOKEN') }}"  # Берём токен из переменной окружения
        path: "{{ vault_proxmox_path }}"    # Путь к секрету (KV v2)
        validate_certs: false  # Отключить проверку сертификата (небезопасно!)
      register: vault_proxmox
      tags: always


    - name: Set facts from Vault
      ansible.builtin.set_fact:
        proxmox_ip: "{{ vault_proxmox.data.data.data.api_host }}"
        proxmox_user: "{{ vault_proxmox.data.data.data.api_user }}"
        proxmox_secret: "{{ vault_proxmox.data.data.data.api_token_proxmox }}"
        proxmox_id: "{{ vault_proxmox.data.data.data.api_token_id }}"
        proxmox_node: "{{ vault_proxmox.data.data.data.node }}"
        sshkey_ansible: "{{ vault_proxmox.data.data.data.ssh_key_ansible }}"
      no_log: true
      tags: always

    - name: Stoped VM to Proxmox
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_ip }}"
        node: "{{ proxmox_node }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_id }}"
        api_token_secret: "{{ proxmox_secret }}"
        validate_certs: false
        vmid: "{{ item }}"
        state: stopped
      loop: "{{ vm_id }}"

    - name: Ждем 30 секунд
      ansible.builtin.pause:
        seconds: 30

    - name: Destroy VM to Proxmox
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_ip }}"
        node: "{{ proxmox_node }}"
        api_user: "{{ proxmox_user }}"
        api_token_id: "{{ proxmox_id }}"
        api_token_secret: "{{ proxmox_secret }}"
        validate_certs: false
        vmid: "{{ item }}"
        state: absent
      loop: "{{ vm_id }}"